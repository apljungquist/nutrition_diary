{"version":3,"sources":["model.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Food","name","quantity","energy","fat","carbohydrates","protein","fiber","Component","food","Meal","start","end","components","this","getTime","map","component","reduce","aggregate","marginal","sample","meals","List","Date","Summary","meal","useState","show","setShow","handleClose","Row","toLocaleString","undefined","maximumFractionDigits","minimumFractionDigits","ButtonGroup","aria-label","Button","variant","disabled","onClick","Modal","onHide","Header","closeButton","Title","Body","InputGroup","FormControl","placeholder","value","type","defaultValue","toISOString","split","Append","Footer","History","ListGroup","Item","Page","App","className","Container","Navbar","expand","bg","Brand","Nav","Link","href","model","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gVAGaA,EACT,WACWC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACR,yBAPQN,OAOT,KANSC,WAMT,KALSC,SAKT,KAJSC,MAIT,KAHSC,gBAGT,KAFSC,UAET,KADSC,SAMFC,EACT,WACWC,EACAP,GACR,yBAFQO,OAET,KADSP,YAKFQ,EAAb,WACI,WACWT,EACAU,EACAC,EACAC,GACR,yBAJQZ,OAIT,KAHSU,QAGT,KAFSC,MAET,KADSC,aALf,qDAUQ,OAAOC,KAAKF,IAAOE,KAAKF,IAAIG,UAAYD,KAAKH,MAAMI,UAAa,OAVxE,6BAcQ,OAAOD,KACFD,WACAG,KAAI,SAACC,GAAD,OAAeA,EAAUf,SAAWe,EAAUR,KAAKP,SAAWe,EAAUR,KAAKN,UACjFe,QAAO,SAACC,EAAWC,GAAZ,OAAyBD,EAAYC,OAjBzD,0BAqBQ,OAAON,KACFD,WACAG,KAAI,SAACC,GAAD,OAAeA,EAAUf,SAAWe,EAAUR,KAAKP,SAAWe,EAAUR,KAAKL,OACjFc,QAAO,SAACC,EAAWC,GAAZ,OAAyBD,EAAYC,OAxBzD,oCA4BQ,OAAON,KACFD,WACAG,KAAI,SAACC,GAAD,OAAeA,EAAUf,SAAWe,EAAUR,KAAKP,SAAWe,EAAUR,KAAKJ,iBACjFa,QAAO,SAACC,EAAWC,GAAZ,OAAyBD,EAAYC,OA/BzD,8BAmCQ,OAAON,KACFD,WACAG,KAAI,SAACC,GAAD,OAAeA,EAAUf,SAAWe,EAAUR,KAAKP,SAAWe,EAAUR,KAAKH,WACjFY,QAAO,SAACC,EAAWC,GAAZ,OAAyBD,EAAYC,SAtCzD,KAgDaC,EAAS,CAClBC,MAAOC,YAAK,CACJ,IAAIb,EACA,mBACA,IAAIc,KAAK,6BACT,IAAIA,KAAK,6BACT,CACI,IAAIhB,EACA,IAAIR,EACA,aACA,IACA,QACA,GACA,KACA,KACA,GAEJ,KAEJ,IAAIQ,EACA,IAAIR,EACA,aACA,GACA,QACA,GACA,EACA,GACA,IAEJ,MAIZ,IAAIU,EACA,gBACA,IAAIc,KAAK,6BACT,IAAIA,KAAK,6BACT,CACI,IAAIhB,EACA,IAAIR,EACA,YACA,EACA,OACA,GACA,IACA,KACA,GAEJ,GAEJ,IAAIQ,EACA,IAAIR,EACA,aACA,GACA,QACA,GACA,EACA,GACA,IAEJ,MAIZ,IAAIU,EACA,cACA,IAAIc,KAAK,6BACT,IAAIA,KAAK,6BACT,CACI,IAAIhB,EACA,IAAIR,EACA,YACA,EACA,OACA,GACA,IACA,KACA,GAEJ,GAEJ,IAAIQ,EACA,IAAIR,EACA,YACA,IACA,QACA,EACA,GACA,GACA,GAEJ,UClJxB,SAASyB,EAAT,GAAgD,IAA9BC,EAA6B,EAA7BA,KAA6B,EACnBC,oBAAS,GADU,mBACpCC,EADoC,KAC9BC,EAD8B,KAGrCC,EAAc,kBAAMD,GAAQ,IAGlC,OAAQ,qCACJ,eAACE,EAAA,EAAD,WACI,4BAAIL,EAAKzB,OADb,KACyByB,EAAKf,MAAMqB,iBADpC,MACyDN,EAAKd,IAAIoB,iBADlE,OAGA,eAACD,EAAA,EAAD,gBACOL,EAAKvB,OAAS,KAAM6B,oBAAeC,EAAW,CAACC,sBAAuB,IAD7E,OAEMR,EAAKtB,IAAI4B,oBAAeC,EAAW,CAACE,sBAAuB,EAAGD,sBAAuB,IAF3F,OAGMR,EAAKrB,cAAc2B,oBAAeC,EAAW,CAACE,sBAAuB,EAAGD,sBAAuB,IAHrG,OAIMR,EAAKpB,QAAQ0B,oBAAeC,EAAW,CAACE,sBAAuB,EAAGD,sBAAuB,OAE/F,cAACH,EAAA,EAAD,UACI,eAACK,EAAA,EAAD,CAAaC,aAAW,UAAxB,UACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,UAAQ,EAApC,kBACA,cAACF,EAAA,EAAD,CAAQC,QAAQ,YAAYE,QAfrB,kBAAMZ,GAAQ,IAerB,uBAIR,eAACa,EAAA,EAAD,CAAOd,KAAMA,EAAMe,OAAQb,EAA3B,UACI,cAACY,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,qBAEJ,eAACJ,EAAA,EAAMK,KAAP,WACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CACIC,YAAY,YACZb,aAAW,YACXc,MAAOzB,EAAKzB,SAGpB,cAAC+C,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CACIC,YAAY,aACZb,aAAW,aACXe,KAAK,iBACLC,aAAc3B,EAAKf,MAAM2C,cAAcC,MAAM,KAAK,OAGzD7B,EAAKb,WAAWG,KACb,SAACC,GAAD,OAAgB,eAAC+B,EAAA,EAAD,WACR,cAACC,EAAA,EAAD,CAAaG,KAAK,SAASD,MAAOlC,EAAUf,WAC5C,cAAC+C,EAAA,EAAD,CAAaG,KAAK,OAAOD,MAAOlC,EAAUR,KAAKR,OAC/C,cAAC+C,EAAA,EAAWQ,OAAZ,UACI,cAAClB,EAAA,EAAD,CAAQC,QAAQ,oBAAhB,6BAKpB,eAACG,EAAA,EAAMe,OAAP,WACI,cAACnB,EAAA,EAAD,CAAQC,QAAQ,YAAYE,QAASX,EAArC,mBAGA,cAACQ,EAAA,EAAD,CAAQC,QAAQ,UAAUE,QAASX,EAAnC,mCAQhB,SAAS4B,EAAT,GAAwD,IAAtCpC,EAAqC,EAArCA,MACd,OAAO,cAACqC,EAAA,EAAD,UACFrC,EAAMN,KAAI,SAAAU,GAAI,OAAK,cAACiC,EAAA,EAAUC,KAAX,UAAgB,cAACnC,EAAD,CAASC,KAAMA,WAI3D,SAASmC,EAAT,GAAqD,IAAtCvC,EAAqC,EAArCA,MAEX,OAAO,cAACoC,EAAD,CAASpC,MAAOA,IAuBZwC,MAlBf,WACI,OACI,qBAAKC,UAAU,MAAf,SACI,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAQC,OAAO,KAAK3B,QAAQ,QAAQ4B,GAAG,QAAvC,UACI,cAACF,EAAA,EAAOG,MAAR,6BACA,eAACC,EAAA,EAAD,CAAKN,UAAU,UAAf,UACI,cAACM,EAAA,EAAIC,KAAL,CAAU9B,UAAQ,EAAC+B,KAAK,SAAxB,mBACA,cAACF,EAAA,EAAIC,KAAL,CAAU9B,UAAQ,EAAC+B,KAAK,SAAxB,mBACA,cAACF,EAAA,EAAIC,KAAL,CAAUC,KAAK,SAAf,yBAGR,cAACxC,EAAA,EAAD,UAAK,cAAC8B,EAAD,CAAMvC,MAAOkD,EAAalD,gBC9FhCmD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f41993b1.chunk.js","sourcesContent":["import {List} from \"immutable\";\n\n\nexport class Food {\n    constructor(\n        public name: string,\n        public quantity: number,\n        public energy: number,\n        public fat: number,\n        public carbohydrates: number,\n        public protein: number,\n        public fiber: number,\n    ) {\n    }\n}\n\n\nexport class Component {\n    constructor(\n        public food: Food,\n        public quantity: number,\n    ) {\n    }\n}\n\nexport class Meal {\n    constructor(\n        public name: string,\n        public start: Date,\n        public end: Date,\n        public components: Array<Component>\n    ) {\n    }\n\n    get duration(): number | null {\n        return this.end ? (this.end.getTime() - this.start.getTime()) : null;\n    }\n\n    get energy(): number {\n        return this\n            .components\n            .map((component) => component.quantity / component.food.quantity * component.food.energy)\n            .reduce((aggregate, marginal) => aggregate + marginal)\n    }\n\n    get fat(): number {\n        return this\n            .components\n            .map((component) => component.quantity / component.food.quantity * component.food.fat)\n            .reduce((aggregate, marginal) => aggregate + marginal)\n    }\n\n    get carbohydrates(): number {\n        return this\n            .components\n            .map((component) => component.quantity / component.food.quantity * component.food.carbohydrates)\n            .reduce((aggregate, marginal) => aggregate + marginal)\n    }\n\n    get protein(): number {\n        return this\n            .components\n            .map((component) => component.quantity / component.food.quantity * component.food.protein)\n            .reduce((aggregate, marginal) => aggregate + marginal)\n    }\n\n}\n\nexport interface Data {\n    meals: Array<Meal>\n}\n\n\nexport const sample = {\n    meals: List([\n            new Meal(\n                \"salmon on rocket\",\n                new Date(\"2021-01-03T20:30:00+01:00\"),\n                new Date(\"2021-01-03T21:00:00+01:00\"),\n                [\n                    new Component(\n                        new Food(\n                            \"salmon (g)\",\n                            125,\n                            1.25604E+06,\n                            0.6,\n                            21.2,\n                            28.8,\n                            0.0\n                        ),\n                        125\n                    ),\n                    new Component(\n                        new Food(\n                            \"rocket (g)\",\n                            20,\n                            2.51208E+04,\n                            0.4,\n                            0.0,\n                            0.5,\n                            0.3,\n                        ),\n                        20\n                    ),\n                ],\n            ),\n            new Meal(\n                \"egg on rocket\",\n                new Date(\"2021-01-03T15:45:00+01:00\"),\n                new Date(\"2021-01-03T16:15:00+01:00\"),\n                [\n                    new Component(\n                        new Food(\n                            \"egg (pcs)\",\n                            2,\n                            5.98712E+05,\n                            0.7,\n                            9.5,\n                            12.8,\n                            0.0,\n                        ),\n                        2\n                    ),\n                    new Component(\n                        new Food(\n                            \"rocket (g)\",\n                            20,\n                            2.51208E+04,\n                            0.4,\n                            0.0,\n                            0.5,\n                            0.3\n                        ),\n                        20\n                    )\n                ]\n            ),\n            new Meal(\n                \"egg n bacon\",\n                new Date(\"2021-01-02T13:00:00+01:00\"),\n                new Date(\"2021-01-02T13:15:00+01:00\"),\n                [\n                    new Component(\n                        new Food(\n                            \"egg (pcs)\",\n                            2,\n                            5.98712E+05,\n                            0.7,\n                            9.5,\n                            12.8,\n                            0.0\n                        ),\n                        2\n                    ),\n                    new Component(\n                        new Food(\n                            \"bacon (g)\",\n                            100,\n                            1.1723E+06,\n                            1.0,\n                            24.0,\n                            16.0,\n                            0.0\n                        ),\n                        100\n                    )\n                ]\n            )\n        ]\n    )\n}\n","import React, {useState} from 'react';\nimport './App.scss';\nimport {\n    Button,\n    ButtonGroup,\n    Container,\n    FormControl,\n    InputGroup,\n    ListGroup,\n    Modal,\n    Nav,\n    Navbar,\n    Row\n} from 'react-bootstrap';\nimport * as model from './model';\nimport {List} from 'immutable';\n\n\nfunction Summary({meal}: { meal: model.Meal }) {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (<>\n        <Row>\n            <b>{meal.name}</b> ({meal.start.toLocaleString()} - {meal.end.toLocaleString()})\n        </Row>\n        <Row>\n            E{(meal.energy / 1000).toLocaleString(undefined, {maximumFractionDigits: 0})} /\n            F{meal.fat.toLocaleString(undefined, {minimumFractionDigits: 1, maximumFractionDigits: 1})} /\n            C{meal.carbohydrates.toLocaleString(undefined, {minimumFractionDigits: 1, maximumFractionDigits: 1})} /\n            P{meal.protein.toLocaleString(undefined, {minimumFractionDigits: 1, maximumFractionDigits: 1})}\n        </Row>\n        <Row>\n            <ButtonGroup aria-label=\"Actions\">\n                <Button variant=\"secondary\" disabled>Copy</Button>\n                <Button variant=\"secondary\" onClick={handleShow}>Edit</Button>\n            </ButtonGroup>\n        </Row>\n\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Edit</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <InputGroup>\n                    <FormControl\n                        placeholder=\"Meal name\"\n                        aria-label=\"Meal name\"\n                        value={meal.name}\n                    />\n                </InputGroup>\n                <InputGroup>\n                    <FormControl\n                        placeholder=\"Meal start\"\n                        aria-label=\"Meal start\"\n                        type=\"datetime-local\"\n                        defaultValue={meal.start.toISOString().split('.')[0]}\n                    />\n                </InputGroup>\n                {meal.components.map(\n                    (component) => (<InputGroup>\n                            <FormControl type=\"number\" value={component.quantity}/>\n                            <FormControl type=\"text\" value={component.food.name}/>\n                            <InputGroup.Append>\n                                <Button variant=\"outline-secondary\">Edit</Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    ))}\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" onClick={handleClose}>\n                    Save Changes\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    </>)\n}\n\nfunction History({meals}: { meals: List<model.Meal> }) {\n    return <ListGroup>\n        {meals.map(meal => (<ListGroup.Item><Summary meal={meal}/></ListGroup.Item>))}\n    </ListGroup>\n}\n\nfunction Page({meals}: { meals: List<model.Meal> }) {\n\n    return <History meals={meals}/>\n\n}\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Container>\n                <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\n                    <Navbar.Brand>NutritionDiary</Navbar.Brand>\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link disabled href=\"#fasts\">Fasts</Nav.Link>\n                        <Nav.Link disabled href=\"#foods\">Foods</Nav.Link>\n                        <Nav.Link href=\"#meals\">Meals</Nav.Link>\n                    </Nav>\n                </Navbar>\n                <Row><Page meals={model.sample.meals}/></Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}